{
  "openapi": "3.0.0",
  "info": {
    "title": "My Library Management system",
    "description": "API for a Library Management system",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User registration.",
        "description": "Allows new users to register by providing necessary details like email, and password.",
        "operationId": "Register",
        "responses": {
          "201": {
            "description": "User has been registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/someSchema"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/someSchema"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/someSchema"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/someSchema"
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "User login.",
        "description": "Authenticates users with their credentials and returns an access token.",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/auth/refresh": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh access token.",
        "description": "Generates a new access token using a valid refresh token",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user.",
        "description": "Logs the user out and invalidates the refresh token.",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/user/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieve all users.",
        "description": "Fetches a list of all registered users.",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user details.",
        "description": "Retrieves detailed information about a specific user using their unique ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update user details.",
        "description": "Modifies the details of a specific user by their unique ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user.",
        "description": "Deletes a user from the system using their unique ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/{id}/borrow-history": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "User borrow history.",
        "description": "Retrieves the borrowing history for a specific user by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/{id}/cart": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "User cart details.",
        "description": "Fetches the list of books currently in the user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/{user_id}/notification": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "User notifications.",
        "description": "Retrieves unread notifications for the given user by ID.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/{id}/notification": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update user notifications.",
        "description": "Marks notifications as read or updates notification preferences.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/{id}/read-history": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "User read history.",
        "description": "Retrieves the reading history of a specific user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/{id}/reservation": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "User reservation details.",
        "description": "Lists all current reservations made by a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/book/": {
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "Retrieve all books.",
        "description": "Fetches details of all available books.",
        "parameters": [
          {
            "$ref": "#components/parameters/page"
          },
          {
            "$ref": "#components/parameters/limit"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Book"
        ],
        "summary": "Add a new book.",
        "description": "Creates a new book entry in the system.",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/book/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "Retrieve book details.",
        "description": "Fetches detailed information about a specific book by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Book"
        ],
        "summary": "Update book information.",
        "description": "Modifies details of a book identified by its unique ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Book"
        ],
        "summary": "Delete a book.",
        "description": "Removes a book from the catalog.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/book/{id}/get-users-who-borrowed": {
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "Get borrowers of a book.",
        "description": "Lists users who have borrowed a specific book.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/book/{id}/get-users-who-reserved": {
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "Get reservers of a book.",
        "description": "Lists users who have reserved a specific book.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/borrow/": {
      "post": {
        "tags": [
          "Borrow"
        ],
        "summary": "Borrow a book.",
        "description": "Creates a new borrow request for a user.",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/borrow/{user_id}/{book_id}": {
      "patch": {
        "tags": [
          "Borrow"
        ],
        "summary": "Update borrow record.",
        "description": "Updates the status or return details for a book borrowed by a user.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "book_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/cart/": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Add to cart.",
        "description": "Adds a book to the user",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/cart/{user_id}/{book_id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "book_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/isbn/": {
      "post": {
        "tags": [
          "Isbn"
        ],
        "summary": "Add ISBN entry.",
        "description": "Creates a new ISBN record.",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/isbn/{isbn}": {
      "delete": {
        "tags": [
          "Isbn"
        ],
        "summary": "Remove ISBN entry.",
        "description": "Deletes a specific ISBN record.",
        "parameters": [
          {
            "name": "isbn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/isbn/{isbn}/book-id": {
      "get": {
        "tags": [
          "Isbn"
        ],
        "summary": "Get book ID by ISBN.",
        "description": "Retrieves the associated book ID using the ISBN.",
        "parameters": [
          {
            "name": "isbn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/payment/{id}": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Process payment.",
        "description": "Initiates payment for a specific transaction by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/payment/{reference}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Verify payment status.",
        "description": "Fetches the status of a payment using a transaction reference.",
        "parameters": [
          {
            "name": "reference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/read-history/": {
      "post": {
        "tags": [
          "Read History"
        ],
        "summary": "Add read history.",
        "description": "Records a book as read by a user",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/read-history/{user_id}/{book_id}": {
      "patch": {
        "tags": [
          "Read History"
        ],
        "summary": "Update read history.",
        "description": "Modifies a user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "book_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reservation/": {
      "post": {
        "tags": [
          "Reservation"
        ],
        "summary": "Make a reservation.",
        "description": "Creates a reservation entry for a user.",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reservation/{user_id}/{book_id}": {
      "patch": {
        "tags": [
          "Reservation"
        ],
        "summary": "Update reservation.",
        "description": "Modifies reservation details for a user and a book.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "book_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Reservation"
        ],
        "summary": "Cancel reservation.",
        "description": "Removes a specific reservation.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "book_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "parameters": {
      "page": {
        "description": "Select the page you want to take"
      },
      "limit": {
        "description": "Select how many you items you want to take for the given page"
      }
    }
  }
}